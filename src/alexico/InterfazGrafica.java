/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package alexico;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.Reader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author axelp
 */
public class InterfazGrafica extends javax.swing.JFrame {

    /**
     * Creates new form InterfazGrafica
     */
    public InterfazGrafica() {
        initComponents();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        boton_SeleccionarFile = new javax.swing.JButton();
        label_PathDeFile = new javax.swing.JLabel();
        boton_procesar = new javax.swing.JButton();
        panel_textoRresultado = new javax.swing.JScrollPane();
        texto_resultado = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        boton_SeleccionarFile.setText("Seleccionar input file");
        boton_SeleccionarFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_SeleccionarFileActionPerformed(evt);
            }
        });

        label_PathDeFile.setText("No ha seleccionado un archivo");

        boton_procesar.setText("Analizar");
        boton_procesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_procesarActionPerformed(evt);
            }
        });

        texto_resultado.setColumns(20);
        texto_resultado.setRows(5);
        panel_textoRresultado.setViewportView(texto_resultado);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panel_textoRresultado, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boton_procesar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(boton_SeleccionarFile)
                        .addGap(43, 43, 43)
                        .addComponent(label_PathDeFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boton_SeleccionarFile)
                    .addComponent(label_PathDeFile))
                .addGap(38, 38, 38)
                .addComponent(boton_procesar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(panel_textoRresultado, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boton_SeleccionarFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_SeleccionarFileActionPerformed
        // create an object of JFileChooser class 
            JFileChooser j = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory()); 
  
            // invoke the showsOpenDialog function to show the save dialog 
            int r = j.showOpenDialog(null); 
  
            // if the user selects a file 
            if (r == JFileChooser.APPROVE_OPTION) 
  
            { 
                // set the label to the path of the selected file 
                label_PathDeFile.setText(j.getSelectedFile().getAbsolutePath()); 
            } 
            // if the user cancelled the operation 
            else
                label_PathDeFile.setText("No ha seleccionado un archivo");
    }//GEN-LAST:event_boton_SeleccionarFileActionPerformed

    private void boton_procesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_procesarActionPerformed
        if (this.label_PathDeFile.getText() == "No ha seleccionado un archivo")
        {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un archivo antes para analizar.", "AVISO", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            try
            {
                Analizar();
            }
            catch(Exception e)
            {

            }
        }
    }//GEN-LAST:event_boton_procesarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazGrafica().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton boton_SeleccionarFile;
    private javax.swing.JButton boton_procesar;
    public javax.swing.JLabel label_PathDeFile;
    private javax.swing.JScrollPane panel_textoRresultado;
    private javax.swing.JTextArea texto_resultado;
    // End of variables declaration//GEN-END:variables

    private void Analizar() {
        try
        {
            //Obtenemos el path del archivo a leer y creamos un reader para enviarle a jflex
            String path = this.label_PathDeFile.getText();
            String resultado = ""; //Aqui almacenamos los resultados (tokens)
            RecuperarCodigo rc= new RecuperarCodigo();
            Reader reader = new BufferedReader(new FileReader(path));
            Lexema analizador = new Lexema(reader);
            
            while (true)
            {
                tokens token = analizador.yylex();
                if (token == null) //Si es null, significa que lleg√≥ al final del archivo
                {
                    resultado += "EOF"; //End of file
                    this.texto_resultado.setText(resultado);
                    return;
                }
                
                switch (token)
                    {
                            case ERROR:
                            resultado += " ERROR LEXICO: "+ analizador.lexemas + " " + " LINEA: " +rc.lineas+"\n"; 
                            break;
                            case INDENTIFICADOR: case NUMERO:
                            resultado += " LEXEMA: " + token + " "+" " +" "+" TOKEN: "+ analizador.lexemas + "\n";
                            break;
                            default:
                            resultado += " LEXEMA: " + token + " "+" " +" "+" TOKEN: "+ analizador.lexemas + "\n";
                }
            }
            
        }
        catch (FileNotFoundException ex) {
            Logger.getLogger(InterfazGrafica.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(InterfazGrafica.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
